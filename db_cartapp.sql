DROP TABLE Notificaciones CASCADE CONSTRAINTS;
DROP TABLE Reseñas CASCADE CONSTRAINTS;
DROP TABLE Pagos CASCADE CONSTRAINTS;
DROP TABLE Reservas CASCADE CONSTRAINTS;
DROP TABLE Detalles_Pedido CASCADE CONSTRAINTS;
DROP TABLE Pedidos CASCADE CONSTRAINTS;
DROP TABLE Platos CASCADE CONSTRAINTS;
DROP TABLE Menus CASCADE CONSTRAINTS;
DROP TABLE Restaurantes CASCADE CONSTRAINTS;
DROP TABLE Usuarios CASCADE CONSTRAINTS;

-- Tabla Usuarios
CREATE TABLE Usuarios (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    contraseña VARCHAR2(255) NOT NULL,
    rol VARCHAR2(50) CHECK (rol IN ('Cliente', 'Restaurante')) NOT NULL,
    fecha_registro DATE DEFAULT SYSDATE,
    telefono VARCHAR2(20),
    direccion VARCHAR2(255),
    imagen_perfil VARCHAR2(255)
);

-- Tabla Restaurantes
CREATE TABLE Restaurantes (
    id NUMBER PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    ubicacion VARCHAR2(255),
    descripcion CLOB,
    horario_apertura VARCHAR2(5),
    horario_cierre VARCHAR2(5),
    valoracion_promedio NUMBER(3, 2),
    imagen_destacada VARCHAR2(255),
    categoria VARCHAR2(100),
    CONSTRAINT fk_restaurante_usuario FOREIGN KEY (id) REFERENCES Usuarios(id)
);

-- Tabla Menus
CREATE TABLE Menus (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    restaurante_id NUMBER NOT NULL,
    nombre VARCHAR2(100) NOT NULL,
    descripcion CLOB,
    disponibilidad NUMBER(1) DEFAULT 1,
    CONSTRAINT fk_menu_restaurante FOREIGN KEY (restaurante_id) REFERENCES Restaurantes(id)
);

-- Tabla Platos
CREATE TABLE Platos (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    menu_id NUMBER NOT NULL,
    nombre VARCHAR2(100) NOT NULL,
    descripcion CLOB,
    precio NUMBER(10, 2) NOT NULL,
    imagen VARCHAR2(255),
    estado NUMBER(1) DEFAULT 1,
    CONSTRAINT fk_plato_menu FOREIGN KEY (menu_id) REFERENCES Menus(id)
);

-- Tabla Pedidos
CREATE TABLE Pedidos (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cliente_id NUMBER NOT NULL,
    restaurante_id NUMBER NOT NULL,
    estado VARCHAR2(50) CHECK (estado IN ('Pendiente', 'En preparacion', 'Listo', 'Entregado')) NOT NULL,
    fecha_hora TIMESTAMP DEFAULT SYSTIMESTAMP,
    total NUMBER(10, 2) NOT NULL,
    CONSTRAINT fk_pedido_cliente FOREIGN KEY (cliente_id) REFERENCES Usuarios(id),
    CONSTRAINT fk_pedido_restaurante FOREIGN KEY (restaurante_id) REFERENCES Restaurantes(id)
);

-- Tabla Detalles_Pedido
CREATE TABLE Detalles_Pedido (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pedido_id NUMBER NOT NULL,
    plato_id NUMBER NOT NULL,
    cantidad NUMBER DEFAULT 1,
    precio_unitario NUMBER(10, 2) NOT NULL,
    CONSTRAINT fk_detalle_pedido FOREIGN KEY (pedido_id) REFERENCES Pedidos(id),
    CONSTRAINT fk_detalle_plato FOREIGN KEY (plato_id) REFERENCES Platos(id)
);

-- Tabla Reservas
CREATE TABLE Reservas (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cliente_id NUMBER NOT NULL,
    restaurante_id NUMBER NOT NULL,
    fecha_hora_reserva TIMESTAMP NOT NULL,
    estado VARCHAR2(50) CHECK (estado IN ('Pendiente', 'Confirmada', 'Cancelada')) NOT NULL,
    personas NUMBER DEFAULT 1,
    CONSTRAINT fk_reserva_cliente FOREIGN KEY (cliente_id) REFERENCES Usuarios(id),
    CONSTRAINT fk_reserva_restaurante FOREIGN KEY (restaurante_id) REFERENCES Restaurantes(id)
);

-- Tabla Pagos
CREATE TABLE Pagos (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pedido_id NUMBER NOT NULL,
    cliente_id NUMBER NOT NULL,
    metodo_pago VARCHAR2(50) CHECK (metodo_pago IN ('Tarjeta', 'PayPal', 'Efectivo')) NOT NULL,
    fecha_hora_pago TIMESTAMP DEFAULT SYSTIMESTAMP,
    total NUMBER(10, 2) NOT NULL,
    CONSTRAINT fk_pago_pedido FOREIGN KEY (pedido_id) REFERENCES Pedidos(id),
    CONSTRAINT fk_pago_cliente FOREIGN KEY (cliente_id) REFERENCES Usuarios(id)
);

-- Tabla Reseñas
CREATE TABLE Reseñas (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    restaurante_id NUMBER NOT NULL,
    cliente_id NUMBER NOT NULL,
    valoracion NUMBER(1) CHECK (valoracion BETWEEN 1 AND 5) NOT NULL,
    comentario CLOB,
    fecha_hora TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT fk_resena_restaurante FOREIGN KEY (restaurante_id) REFERENCES Restaurantes(id),
    CONSTRAINT fk_resena_cliente FOREIGN KEY (cliente_id) REFERENCES Usuarios(id)
);

-- Tabla Notificaciones
CREATE TABLE Notificaciones (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    usuario_id NUMBER NOT NULL,
    tipo VARCHAR2(50) NOT NULL,
    mensaje CLOB NOT NULL,
    fecha_hora TIMESTAMP DEFAULT SYSTIMESTAMP,
    estado NUMBER(1) DEFAULT 0,
    CONSTRAINT fk_notificacion_usuario FOREIGN KEY (usuario_id) REFERENCES Usuarios(id)
);

INSERT INTO Usuarios (nombre, email, contraseña, rol) 
VALUES 
('Juan Pérez', 'juanperez@example.com', 'password1', 'Cliente'),
('Restaurante Italiano', 'italiano@example.com', 'password2', 'Restaurante'),
('Restaurante Japonés', 'japones@example.com', 'password3', 'Restaurante');

INSERT INTO Restaurantes (id, nombre, ubicacion, descripcion, horario_apertura, horario_cierre, categoria) 
VALUES 
(2, 'Restaurante Italiano', 'Calle Falsa 123', 'Comida italiana auténtica', '09:00', '22:00', 'Italiana'),
(3, 'Restaurante Japonés', 'Avenida Sakura 45', 'Especialidad en sushi y ramen', '10:00', '23:00', 'Japonesa');

INSERT INTO Menus (restaurante_id, nombre, descripcion) 
VALUES 
(2, 'Menú Italiano', 'Entrantes, plato principal y postre.'),
(3, 'Menú Japonés', 'Entrantes, sushi y ramen.');

INSERT INTO Platos (menu_id, nombre, descripcion, precio, estado) 
VALUES 
(1, 'Pizza Margarita', 'Pizza con queso y albahaca', 8.99, 1),
(1, 'Pasta Carbonara', 'Pasta con crema y panceta', 10.50, 1),
(2, 'Sushi Variado', 'Selección de sushi fresco', 15.00, 1),
(2, 'Ramen de Cerdo', 'Ramen con caldo de cerdo', 12.50, 1);
